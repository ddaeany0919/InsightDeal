# InsightDeal 통합 개발 환경
version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:14
    container_name: insightdeal-postgres
    restart: always
    environment:
      POSTGRES_USER: insightdeal
      POSTGRES_PASSWORD: password
      POSTGRES_DB: insightdeal
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - insightdeal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U insightdeal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI 백엔드 서버
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: insightdeal-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://insightdeal:password@postgres:5432/insightdeal
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - FCM_SERVER_KEY=${FCM_SERVER_KEY:-}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/image_cache:/app/image_cache
    networks:
      - insightdeal-network
    restart: unless-stopped
    command: python -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 가격 수집 스케줄러 (별도 컨테이너)
  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: insightdeal-scheduler
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://insightdeal:password@postgres:5432/insightdeal
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
    volumes:
      - ./backend:/app
    networks:
      - insightdeal-network
    restart: unless-stopped
    command: python scheduler/price_collector.py

volumes:
  postgres_data:

networks:
  insightdeal-network:
    driver: bridge

# 개발 환경 실행 가이드:
# 1. 환경 변수 설정: cp .env.example .env
# 2. 컨테이너 실행: docker-compose up -d
# 3. 로그 확인: docker-compose logs -f backend
# 4. 정지: docker-compose down